queueDf = readEntityFromLake(storageAccountName, manifestPath, "queue")
queueItemsDf = readEntityFromLake(storageAccountName, manifestPath, "queueitem")
incidentDf = readEntityFromLake(storageAccountName, manifestPath, "incident")
# Define columns to select
incidentColumns = ["createdon", "incidentid", "title"]
queueItemsColumns = ["queueid", "objectid"]
queueColumns = ["queueid", "name"]
joinedDfColumns = ["incidentid", "createdon", "name"]
# Filter data frames for required rows and columns
filteredIncidentDf = incidentDf \
                        .filter(incidentDf.createdon.isNotNull()) \
                        .select(*incidentColumns)
filteredQueueItemDf = queueItemsDf \
                        .filter(queueItemsDf.queueid.isNotNull() & queueItemsDf.objectid.isNotNull()) \
                        .select(*queueItemsColumns) \
                        .withColumnRenamed("queueid", "qi_queueid")
filteredQueueDf = queueDf \
                    .withColumn("name", when((queueDf.name.isNull()) | (queueDf.name == ""), "<Unnamed Queue>")
                                        .otherwise(queueDf.name)) \
                    .select(*queueColumns)
# Join the data sets
joinedDf = filteredQueueItemDf \
                .join(filteredQueueDf, filteredQueueItemDf.qi_queueid == filteredQueueDf.queueid, "inner") \
                .join(filteredIncidentDf, filteredQueueItemDf.objectid == filteredIncidentDf.incidentid, "rightouter") \
                .select(*joinedDfColumns)
joinedDf = joinedDf \
                .withColumn("name", when(joinedDf.name.isNull(), "<No_Queue_Assigned>")
                                    .otherwise(joinedDf.name)) \
                .withColumn("createdon_date", to_date(joinedDf.createdon))
# Group joined data set on created date and queue name
groupedDf = joinedDf \
                .groupBy(joinedDf.createdon_date, joinedDf.name) \
                .count() \
                .orderBy(joinedDf.createdon_date, joinedDf.name) \
                .withColumnRenamed("createdon_date", "date") \
                .withColumnRenamed("name", "queue_name")
groupedDf.show(truncate=False)
writeToCsv(groupedDf, "IncidentsPerDay")