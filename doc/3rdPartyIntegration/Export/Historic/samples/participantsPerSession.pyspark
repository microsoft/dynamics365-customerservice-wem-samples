sessionParticipantDf = readEntityFromLake(storageAccountName, manifestPath, "msdyn_sessionparticipant")
# Define columns to select
sessionParticipantColumns = ["createdon","msdyn_omnichannelsession", "msdyn_omnichannelsessionname", "msdyn_sessionparticipantid"]
queueItemsColumns = ["queueid", "objectid"]
queueColumns = ["queueid", "name"]
joinedDfColumns = ["incidentid", "createdon", "name"]
# Filter data frames for required rows and columns
filteredSessionDf = sessionParticipantDf \
                        .filter(sessionParticipantDf.createdon.isNotNull()) \
                        .select(*sessionParticipantColumns) \
                        .withColumn("createdon_date", to_date(sessionParticipantDf.createdon))
# Group joined data set on created date and queue name
groupedDf = filteredSessionDf \
                .groupBy(filteredSessionDf.createdon_date,filteredSessionDf.msdyn_omnichannelsession, filteredSessionDf.msdyn_omnichannelsessionname) \
                .count() \
                .orderBy(filteredSessionDf.createdon_date, filteredSessionDf.msdyn_omnichannelsession) \
                .withColumnRenamed("createdon_date", "date")
groupedDf.show(truncate=False)
writeToCsv(groupedDf, "ParticipantsPerSession")