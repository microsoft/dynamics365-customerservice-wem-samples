// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeOff.SampleClient
{
	
	
	/// <summary>
	/// The status of the WEM request.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum msdyn_WemRequest_msdyn_RequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Accepted", 6)]
		Accepted = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved", 3)]
		Approved = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Canceled", 2)]
		Canceled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Draft", 0)]
		Draft = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Expired", 8)]
		Expired = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Fulfilled", 7)]
		Fulfilled = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("In Review", 1)]
		InReview = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Pending Approval", 5)]
		PendingApproval = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Rejected", 4)]
		Rejected = 5,
	}
	
	/// <summary>
	/// The type of the WEM request.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum msdyn_WemRequest_msdyn_RequestType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bid", 1)]
		Bid = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Publish", 3)]
		Publish = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Swap", 2)]
		Swap = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Time off", 0)]
		Timeoff = 1,
	}
	
	/// <summary>
	/// Status of the WEM Request
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum msdyn_WemRequest_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the WEM Request
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum msdyn_WemRequest_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msdyn_wemrequest")]
	public partial class msdyn_WemRequest : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the msdyn_wemrequest entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string msdyn_Agent = "msdyn_agent";
			public const string msdyn_AgentName = "msdyn_agentname";
			public const string msdyn_AgentNote = "msdyn_agentnote";
			public const string msdyn_Booking = "msdyn_booking";
			public const string msdyn_EndTime = "msdyn_endtime";
			public const string msdyn_ExpiresOn = "msdyn_expireson";
			public const string msdyn_IsFullDay = "msdyn_isfullday";
			public const string msdyn_IsFullDayName = "msdyn_isfulldayname";
			public const string msdyn_IsPublicSwapRequest = "msdyn_ispublicswaprequest";
			public const string msdyn_IsPublicSwapRequestName = "msdyn_ispublicswaprequestname";
			public const string msdyn_Name = "msdyn_name";
			public const string msdyn_PreferredTime = "msdyn_preferredtime";
			public const string msdyn_RequestStatus = "msdyn_requeststatus";
			public const string msdyn_RequestStatusName = "msdyn_requeststatusname";
			public const string msdyn_RequestType = "msdyn_requesttype";
			public const string msdyn_RequestTypeName = "msdyn_requesttypename";
			public const string msdyn_ReviewedBy = "msdyn_reviewedby";
			public const string msdyn_ReviewedByName = "msdyn_reviewedbyname";
			public const string msdyn_ReviewedByYomiName = "msdyn_reviewedbyyominame";
			public const string msdyn_ReviewedOn = "msdyn_reviewedon";
			public const string msdyn_Reviewer = "msdyn_reviewer";
			public const string msdyn_ReviewerName = "msdyn_reviewername";
			public const string msdyn_ReviewerNote = "msdyn_reviewernote";
			public const string msdyn_ReviewerYomiName = "msdyn_revieweryominame";
			public const string msdyn_ShiftDate = "msdyn_shiftdate";
			public const string msdyn_ShiftHours = "msdyn_shifthours";
			public const string msdyn_ShiftPlan = "msdyn_shiftplan";
			public const string msdyn_ShiftPlanName = "msdyn_shiftplanname";
			public const string msdyn_StartTime = "msdyn_starttime";
			public const string msdyn_SwapForAgent = "msdyn_swapforagent";
			public const string msdyn_SwapForAgentName = "msdyn_swapforagentname";
			public const string msdyn_SwapForBooking = "msdyn_swapforbooking";
			public const string msdyn_SwapForEndTime = "msdyn_swapforendtime";
			public const string msdyn_SwapForShiftDate = "msdyn_swapforshiftdate";
			public const string msdyn_SwapForShiftHours = "msdyn_swapforshifthours";
			public const string msdyn_SwapForShiftPlan = "msdyn_swapforshiftplan";
			public const string msdyn_SwapForShiftPlanName = "msdyn_swapforshiftplanname";
			public const string msdyn_SwapForStartTime = "msdyn_swapforstarttime";
			public const string msdyn_SwapReviewedOn = "msdyn_swapreviewedon";
			public const string msdyn_TimeOffType = "msdyn_timeofftype";
			public const string msdyn_TimeOffTypeName = "msdyn_timeofftypename";
			public const string msdyn_WemRequest_TimeOffType_msdyn_TimeOffType = "msdyn_wemrequest_timeofftype_msdyn_timeofftype";
			public const string msdyn_WemRequestId = "msdyn_wemrequestid";
			public const string Id = "msdyn_wemrequestid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public msdyn_WemRequest() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "msdyn_wemrequestid";
		
		public const string PrimaryNameAttribute = "msdyn_name";
		
		public const string EntitySchemaName = "msdyn_wemrequest";
		
		public const string EntityLogicalName = "msdyn_wemrequest";
		
		public const string EntityLogicalCollectionName = "msdyn_wemrequests";
		
		public const string EntitySetName = "msdyn_wemrequests";
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The agent initiating the WEM request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_agent")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_Agent
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_agent");
			}
			set
			{
				this.SetAttributeValue("msdyn_agent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_agentname")]
		public string msdyn_AgentName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_agent"))
				{
					return this.FormattedValues["msdyn_agent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Optional note about the WEM request from the agent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_agentnote")]
		public string msdyn_AgentNote
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_agentnote");
			}
			set
			{
				this.SetAttributeValue("msdyn_agentnote", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_booking")]
		public string msdyn_Booking
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_booking");
			}
			set
			{
				this.SetAttributeValue("msdyn_booking", value);
			}
		}
		
		/// <summary>
		/// The end time of the request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_endtime")]
		public System.Nullable<System.DateTime> msdyn_EndTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_endtime");
			}
			set
			{
				this.SetAttributeValue("msdyn_endtime", value);
			}
		}
		
		/// <summary>
		/// The date and time when the WEM request will expire.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_expireson")]
		public System.Nullable<System.DateTime> msdyn_ExpiresOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_expireson");
			}
			set
			{
				this.SetAttributeValue("msdyn_expireson", value);
			}
		}
		
		/// <summary>
		/// A flag indicating whether it's for full day.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isfullday")]
		public System.Nullable<bool> msdyn_IsFullDay
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isfullday");
			}
			set
			{
				this.SetAttributeValue("msdyn_isfullday", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isfulldayname")]
		public string msdyn_IsFullDayName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_isfullday"))
				{
					return this.FormattedValues["msdyn_isfullday"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates whether it is a public swap request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ispublicswaprequest")]
		public System.Nullable<bool> msdyn_IsPublicSwapRequest
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ispublicswaprequest");
			}
			set
			{
				this.SetAttributeValue("msdyn_ispublicswaprequest", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ispublicswaprequestname")]
		public string msdyn_IsPublicSwapRequestName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_ispublicswaprequest"))
				{
					return this.FormattedValues["msdyn_ispublicswaprequest"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_name")]
		public string msdyn_Name
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_name");
			}
			set
			{
				this.SetAttributeValue("msdyn_name", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_preferredtime")]
		public string msdyn_PreferredTime
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_preferredtime");
			}
			set
			{
				this.SetAttributeValue("msdyn_preferredtime", value);
			}
		}
		
		/// <summary>
		/// The status of the WEM request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requeststatus")]
		public virtual msdyn_WemRequest_msdyn_RequestStatus? msdyn_RequestStatus
		{
			get
			{
				return ((msdyn_WemRequest_msdyn_RequestStatus?)(EntityOptionSetEnum.GetEnum(this, "msdyn_requeststatus")));
			}
			set
			{
				this.SetAttributeValue("msdyn_requeststatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requeststatusname")]
		public string msdyn_RequestStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_requeststatus"))
				{
					return this.FormattedValues["msdyn_requeststatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The type of the WEM request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requesttype")]
		public virtual msdyn_WemRequest_msdyn_RequestType? msdyn_RequestType
		{
			get
			{
				return ((msdyn_WemRequest_msdyn_RequestType?)(EntityOptionSetEnum.GetEnum(this, "msdyn_requesttype")));
			}
			set
			{
				this.SetAttributeValue("msdyn_requesttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requesttypename")]
		public string msdyn_RequestTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_requesttype"))
				{
					return this.FormattedValues["msdyn_requesttype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The user who reviewed the WEM request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewedby")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_ReviewedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_reviewedby");
			}
			set
			{
				this.SetAttributeValue("msdyn_reviewedby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewedbyname")]
		public string msdyn_ReviewedByName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_reviewedby"))
				{
					return this.FormattedValues["msdyn_reviewedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewedbyyominame")]
		public string msdyn_ReviewedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_reviewedby"))
				{
					return this.FormattedValues["msdyn_reviewedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The date and time when the WEM request was reviewed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewedon")]
		public System.Nullable<System.DateTime> msdyn_ReviewedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_reviewedon");
			}
			set
			{
				this.SetAttributeValue("msdyn_reviewedon", value);
			}
		}
		
		/// <summary>
		/// The reviewer for the WEM request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewer")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_Reviewer
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_reviewer");
			}
			set
			{
				this.SetAttributeValue("msdyn_reviewer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewername")]
		public string msdyn_ReviewerName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_reviewer"))
				{
					return this.FormattedValues["msdyn_reviewer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Optional note about the WEM request from the reviewer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reviewernote")]
		public string msdyn_ReviewerNote
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_reviewernote");
			}
			set
			{
				this.SetAttributeValue("msdyn_reviewernote", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_revieweryominame")]
		public string msdyn_ReviewerYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_reviewer"))
				{
					return this.FormattedValues["msdyn_reviewer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The date of shift plan.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_shiftdate")]
		public System.Nullable<System.DateTime> msdyn_ShiftDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_shiftdate");
			}
			set
			{
				this.SetAttributeValue("msdyn_shiftdate", value);
			}
		}
		
		/// <summary>
		/// The duration of the shift in hours.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_shifthours")]
		public System.Nullable<decimal> msdyn_ShiftHours
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msdyn_shifthours");
			}
			set
			{
				this.SetAttributeValue("msdyn_shifthours", value);
			}
		}
		
		/// <summary>
		/// The shift plan in the WEM request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_shiftplan")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_ShiftPlan
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_shiftplan");
			}
			set
			{
				this.SetAttributeValue("msdyn_shiftplan", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_shiftplanname")]
		public string msdyn_ShiftPlanName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_shiftplan"))
				{
					return this.FormattedValues["msdyn_shiftplan"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The start time of the request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_starttime")]
		public System.Nullable<System.DateTime> msdyn_StartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_starttime");
			}
			set
			{
				this.SetAttributeValue("msdyn_starttime", value);
			}
		}
		
		/// <summary>
		/// The agent to be swapped.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforagent")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_SwapForAgent
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_swapforagent");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforagent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforagentname")]
		public string msdyn_SwapForAgentName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_swapforagent"))
				{
					return this.FormattedValues["msdyn_swapforagent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforbooking")]
		public string msdyn_SwapForBooking
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_swapforbooking");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforbooking", value);
			}
		}
		
		/// <summary>
		/// The end time of the swap for request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforendtime")]
		public System.Nullable<System.DateTime> msdyn_SwapForEndTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_swapforendtime");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforendtime", value);
			}
		}
		
		/// <summary>
		/// The date of the swap for shift plan.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforshiftdate")]
		public System.Nullable<System.DateTime> msdyn_SwapForShiftDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_swapforshiftdate");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforshiftdate", value);
			}
		}
		
		/// <summary>
		/// The duration of the swap for shift in hours.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforshifthours")]
		public System.Nullable<decimal> msdyn_SwapForShiftHours
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msdyn_swapforshifthours");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforshifthours", value);
			}
		}
		
		/// <summary>
		/// The shift plan to be swapped.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforshiftplan")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_SwapForShiftPlan
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_swapforshiftplan");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforshiftplan", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforshiftplanname")]
		public string msdyn_SwapForShiftPlanName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_swapforshiftplan"))
				{
					return this.FormattedValues["msdyn_swapforshiftplan"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The start time of the swap for request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapforstarttime")]
		public System.Nullable<System.DateTime> msdyn_SwapForStartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_swapforstarttime");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapforstarttime", value);
			}
		}
		
		/// <summary>
		/// The date and time when the swap request was reviewed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_swapreviewedon")]
		public System.Nullable<System.DateTime> msdyn_SwapReviewedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_swapreviewedon");
			}
			set
			{
				this.SetAttributeValue("msdyn_swapreviewedon", value);
			}
		}
		
		/// <summary>
		/// The type of time off request.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_timeofftype")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_TimeOffType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_timeofftype");
			}
			set
			{
				this.SetAttributeValue("msdyn_timeofftype", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_timeofftypename")]
		public string msdyn_TimeOffTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_timeofftype"))
				{
					return this.FormattedValues["msdyn_timeofftype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_wemrequestid")]
		public System.Nullable<System.Guid> msdyn_WemRequestId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("msdyn_wemrequestid");
			}
			set
			{
				this.SetAttributeValue("msdyn_wemrequestid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_wemrequestid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.msdyn_WemRequestId = value;
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the WEM Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual msdyn_WemRequest_StateCode? StateCode
		{
			get
			{
				return ((msdyn_WemRequest_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the WEM Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual msdyn_WemRequest_StatusCode? StatusCode
		{
			get
			{
				return ((msdyn_WemRequest_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_wemrequest_timeofftype_msdyn_timeofftype
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_timeofftype")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_wemrequest_timeofftype_msdyn_timeofftype")]
		public TimeOff.SampleClient.msdyn_TimeOffType msdyn_WemRequest_TimeOffType_msdyn_TimeOffType
		{
			get
			{
				return this.GetRelatedEntity<TimeOff.SampleClient.msdyn_TimeOffType>("msdyn_wemrequest_timeofftype_msdyn_timeofftype", null);
			}
			set
			{
				this.SetRelatedEntity<TimeOff.SampleClient.msdyn_TimeOffType>("msdyn_wemrequest_timeofftype_msdyn_timeofftype", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public msdyn_WemRequest(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msdyn_wemrequestid"] = base.Id;
                        break;
                    case "msdyn_wemrequestid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
